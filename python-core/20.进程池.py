# 进程池的主要方法及应用场景
"""
p.apply_async(func[,args[,kwds]]) 非阻塞方式调用func，func的返回值将放在一个异步结果对象中。
  func -- 一个函数，接受一个或多个参数
  args -- 传递给func的参数元组
  kwds -- 关键字参数

p.close() 关闭进程池，使进程池停止接受新的任务。

p.join() 等待进程池中的所有任务完成。
enumerate 不管任务是否完成立即终止，返回进程池中的所有任务及其状态。

如果使用异步提交任务，等待进程池中的所有任务完成，然后使用get方法获取结果，可以避免内存泄漏。
"""
