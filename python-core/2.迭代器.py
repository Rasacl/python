# 迭代器是访问可对象的工具
# 迭代器对象从集合和对象的第一个元素开始访问，直到所有元素被访问完才结束，迭代器只能往前不能后退

# 迭代器有两个函数
# iter（） 可取的可迭代对象的迭代器
# next（） 返回下一个元素，如果没有元素则抛出StopIteration错误

# 迭代器的功能 1.for循环 2.逐行遍历文本文件 3.列表推导式 4.元组拆包

# 迭代器的特征
'''
1. 访问者不需要关心迭代器内部结构，只需要不断执行next（）方法获取下一个内容
2. 不能随机访问集合中的某个值，只能从头到尾顺序读取 --缺点
3. 访问过程不能回退，不能访问之前的值 --缺点
4. 适合遍历很大的数据集合，节省内存，提升速度 --优势（应用场景）
5  可迭代：迭代器是实现__iter__方法，因此可迭代
6. 易损耗：迭代器经过一次依次取值的循环后就耗尽了，如果想再次迭代要重建迭代器 --缺点
'''

list = [1, 2, 3, 4, 5]
# 创建迭代器对象
iterator = iter(list)
# 输出迭代器的下一个元素
print(next(iterator))
print(next(iterator))
print(next(iterator))
print(next(iterator))
print(next(iterator))